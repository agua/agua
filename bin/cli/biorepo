#!/usr/bin/perl -w
use strict;

my $DEBUG = 0;
#$DEBUG = 1;

=head2

APPLICATION     deploy

PURPOSE

    1. INSTALL KEY AGUA DEPENDENCIES
    
INPUT

    1. MODE OF ACTION, E.G., update, bioapps, biorepo, sge, starcluster

OUTPUT

    MYSQL DATABASE CONFIGURATION AND EDITED CONFIG FILE            

USAGE

sudo /a/bin/cli/biorepo \
 [--mode String] \ 
 [--configfile String] \ 
 [--logfile String] \ 
 [--s3bucket String] \
 [--opsrepo String] \
 [--opsfile String] \
 [--pmfile String] \
 [--repository String] \
 [--logfile String] \
 [--log String] \
 [--printlog String] \
 [--help]

 --mode       :    all | list | deploy | install | update | ... etc. (see below)
 --configfile :    Location of configfile
 --logfile    :    Location of logfile
 --configfile :    Location of *.yaml config file
 --opsrepo    :    Name of ops repo (e.g., biorepodev, default: biorepo)
 --opsfile    :    Location of *.ops file containing configuration information
 --pmfile     :    Location of *.pm file containing installation instructions
 --repository :    Name of Git repository to be used as the code source
 --logfile    :    Location of log file
 --log    	  :    Print debug and other information to STDOUT (levels 1-5)
 --printlog   :    Print debug and other information to logfile (levels 1-5)
 --help       :    Print help info

The 'mode' options are as follows:

    --mode list         List installed packages and latest versions of available packages
    --mode all          Install all of the available packages
    --mode install      Install a package
    --mode biorepo      Install or update the Biorepository
    --mode bioapps      Install the Bioapps package
    --mode sge          Install SGE (Sun Grid Engine)
    --mode starcluster  Install StarCluster
    --mode deploy       Install Agua dependencies (Biorepo, Bioapps, SGE and StarCluster)


EXAMPLES

Install all dependencies
sudo biorepo

Install the Biorepository package ('biorepo')
sudo biorepo --mode update

Install the Biorepository from the 'biorepodev' repository
sudo biorepo --mode update --repository biorepodev

Install 'mypackage' version 0.0.1
biorepo --mode install --package mypackage --version 0.0.1

=cut

#### FLUSH BUFFER
$| = 1;

my $whoami = `whoami`;
if ( not $whoami =~/^root\s*$/ ) {
    print "You must be root to run 'biorepo'\n";
    exit;
}

#### USE LIB
use FindBin qw($Bin);
use lib "$Bin/../../lib";

#### EXTERNAL MODULES
use Getopt::Long;
use Data::Dumper;

#### INTERNAL MODULES
use Agua::Biorepo;
use Agua::DBaseFactory;
use Conf::Yaml;

#### GET OPTIONS
my $mode         =    "update";
my $configfile   =    "$Bin/../../conf/config.yaml";
my $opsrepo;
my $opsfile;
my $pmfile;
my $methods;
my $versionfile = "";
my $s3bucket;
my $package;
my $version;
my $repository;
my $login;
my $token;
my $keyfile;
my $password;
my $logfile     =    "/tmp/agua-deploy.log";
my $log         =    2;
my $printlog    =    5;
my $help;
GetOptions (
    'mode=s'        => \$mode,
    'methods=s'     => \$methods,
    'configfile=s'  => \$configfile,
    'opsrepo=s'     => \$opsrepo,
    'opsfile=s'     => \$opsfile,
    'pmfile=s'      => \$pmfile,
    'versionfile=s' => \$versionfile,
    'package=s'     => \$package,
    'version=s'     => \$version,
    'repository=s'  => \$repository,
    'logfile=s'     => \$logfile,
    'log=i'     	=> \$log,
    'printlog=i'    => \$printlog,
    'help'          => \$help
) or die "No options specified. Try '--help'\n";

#### PRINT HELP IF REQUESTED
usage() if defined $help;

my $conf = Conf::Yaml->new(
    memory      =>  0,
    inputfile   =>  $configfile,
    backup      =>  1,

    log         =>  $log,
    printlog    =>  $printlog,
    logfile     =>  $logfile
);


$login         =     $ENV{'login'} if defined $ENV{'login'};
$token         =     $ENV{'token'} if defined $ENV{'token'};
$keyfile     =     $ENV{'keyfile'} if defined $ENV{'keyfile'};
$password     =     $ENV{'password'} if defined $ENV{'password'};
#print "biorepo    login: $login\n";
#print "biorepo    token: $token\n";

my $object = Agua::Biorepo->new({
    conf        =>  $conf,
    mode        =>  $mode,
    methods     =>  $methods,
    configfile  =>  $configfile,
    opsrepo     =>  $opsrepo,
    opsfile     =>  $opsfile,
    pmfile      =>  $pmfile,
    versionfile =>  $versionfile,
    package     =>  $package,
    version     =>  $version,
    repository  =>  $repository,
    login       =>  $login,
    token       =>  $token,
    keyfile     =>  $keyfile,
    password    =>  $password,

    log         =>  $log,
    printlog    =>  $printlog,
    logfile     =>  $logfile
});

#### CHECK MODE
print "mode not supported: $mode\n" and exit if not $object->can($mode);
print "mode not supported (private method): $mode\n" and exit if $mode =~ /^_/;

#### RUN QUERY
no strict;
eval { $object->$mode() };
if ( $@ ){
    print "Error: $mode): $@\n";
}
print "\nCompleted $0\n";

sub usage {
    print `perldoc $0`;
    exit;
}
    
